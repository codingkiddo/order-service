name: Commit Stage
on:
  push:
  schedule: # Every Monday
    - cron: '0 0 * * 1'
env: 
  REGISTRY: ghcr.io
  IMAGE_NAME: codingkiddo/order-service
  VERSION: 0.0.8-SNAPSHOT
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      actions: write
      contents: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan 
        with: 
            path: "${{ github.workspace }}"
            fail-build: false
            severity-cutoff: low
            acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure() 
        with: 
            sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests
        run: |
          mvn --batch-mode --update-snapshots verify
  package: 
    name: Package and Publish 
    if: github.ref == 'refs/heads/main'
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions: 
        contents: write
        packages: write 
        security-events: write
    steps: 
        - name: Checkout source code
          uses: actions/checkout@v3
        - name: Set up JDK 
          uses: actions/setup-java@v3
          with: 
            distribution: temurin 
            java-version: 17
            cache: maven
        - name: 
          run: | 
            chmod +x mvnw
            ./mvnw spring-boot:build-image
        - name: OCI image vulnerability scanning
          uses: anchore/scan-action@v3
          id: scan 
          with: 
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            fail-build: false
            severity-cutoff: high
            acs-report-enable: true
        - name: Log into container registry
          uses: docker/login-action@v2
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Publish container image
          run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            
            
            